import{C as v,e as M,N as w,S as j,f as b,M as g,g as L,h as c,i as P,j as S,k as z,l as A,P as T,W as f,m as G}from"./chunks/three.module.9bec594e.js";import{O as R}from"./chunks/OrbitControls.58e02143.js";import{G as C}from"./chunks/lil-gui.esm.f85e520d.js";const p=new C,k=new v,n=new M;n.load("/textures/door/color.jpg");n.load("/textures/door/alpha.jpg");n.load("/textures/door/AO.jpg");n.load("/textures/door/height.jpg");n.load("/textures/door/normal.jpg");n.load("/textures/door/metalness.jpg");n.load("/textures/door/roughness.jpg");n.load("/textures/matcaps/3.png");const l=n.load("/textures/gradients/5.jpg");l.minFilter=w;l.magFilter=w;l.generateMipmaps=!1;const F=k.load(["/textures/environmentMaps/3/px.jpg","/textures/environmentMaps/3/nx.jpg","/textures/environmentMaps/3/py.jpg","/textures/environmentMaps/3/ny.jpg","/textures/environmentMaps/3/pz.jpg","/textures/environmentMaps/3/nz.jpg"]),h=document.querySelector("canvas.webgl"),m=new j,t=new b;t.metalness=.7;t.roughness=.2;t.envMap=F;p.add(t,"metalness").min(0).max(1).step(1e-4).name("Metalness");p.add(t,"roughness").min(0).max(1).step(1e-4).name("Roughness");p.add(t,"aoMapIntensity").min(0).max(10).step(1e-4).name("AO Intensity");p.add(t,"displacementScale").min(0).max(1).step(1e-4).name("displacementScale");const s=new g(new L(.5,64,64),t);s.geometry.setAttribute("uv2",new c(s.geometry.attributes.uv.array,2));s.position.x=-1.5;const r=new g(new P(1,1,100,100),t);r.geometry.setAttribute("uv2",new c(r.geometry.attributes.uv.array,2));const i=new g(new S(.3,.2,64,128),t);i.geometry.setAttribute("uv2",new c(i.geometry.attributes.uv.array,2));i.position.x=1.5;m.add(s,r,i);const O=new z(16777215,.5),u=new A(16777215,.5);u.position.x=2;u.position.y=3;u.position.z=4;m.add(O,u);const e={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{e.width=window.innerWidth,e.height=window.innerHeight,o.aspect=e.width/e.height,o.updateProjectionMatrix(),d.setSize(e.width,e.height),d.setPixelRatio(Math.min(window.devicePixelRatio,2))});const o=new T(75,e.width/e.height,.1,100);o.position.x=1;o.position.y=1;o.position.z=2;m.add(o);const x=new R(o,h);x.enableDamping=!0;const d=new f({canvas:h});d.setSize(e.width,e.height);d.setPixelRatio(Math.min(window.devicePixelRatio,2));const W=new G,y=()=>{const a=W.getElapsedTime();s.rotation.y=.1*a,r.rotation.y=.1*a,i.rotation.y=.1*a,s.rotation.x=.15*a,r.rotation.x=.15*a,i.rotation.x=.15*a,x.update(),d.render(m,o),window.requestAnimationFrame(y)};y();
