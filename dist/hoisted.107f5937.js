import{o as k,F as z,p as E,q as F,S as G,A as H,e as L,r as R,M as v,j,P as q,W as C,m as O}from"./chunks/three.module.9bec594e.js";import{O as W}from"./chunks/OrbitControls.58e02143.js";import{G as A}from"./chunks/lil-gui.esm.f85e520d.js";class B extends k{constructor(t){super(t)}load(t,e,o,c){const i=this,n=new z(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(s){let h;try{h=JSON.parse(s)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),h=JSON.parse(s.substring(65,s.length-2))}const d=i.parse(h);e&&e(d)},o,c)}parse(t){return new _(t)}}class _{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const o=[],c=I(t,e,this.data);for(let i=0,n=c.length;i<n;i++)o.push(...c[i].toShapes());return o}}function I(u,t,e){const o=Array.from(u),c=t/e.resolution,i=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*c,n=[];let s=0,h=0;for(let d=0;d<o.length;d++){const p=o[d];if(p===`
`)s=0,h-=i;else{const g=N(p,c,s,h,e);s+=g.offsetX,n.push(g.path)}}return n}function N(u,t,e,o,c){const i=c.glyphs[u]||c.glyphs["?"];if(!i){console.error('THREE.Font: character "'+u+'" does not exists in font family '+c.familyName+".");return}const n=new E;let s,h,d,p,g,x,y,f;if(i.o){const r=i._cachedOutline||(i._cachedOutline=i.o.split(" "));for(let a=0,P=r.length;a<P;)switch(r[a++]){case"m":s=r[a++]*t+e,h=r[a++]*t+o,n.moveTo(s,h);break;case"l":s=r[a++]*t+e,h=r[a++]*t+o,n.lineTo(s,h);break;case"q":d=r[a++]*t+e,p=r[a++]*t+o,g=r[a++]*t+e,x=r[a++]*t+o,n.quadraticCurveTo(g,x,d,p);break;case"b":d=r[a++]*t+e,p=r[a++]*t+o,g=r[a++]*t+e,x=r[a++]*t+o,y=r[a++]*t+e,f=r[a++]*t+o,n.bezierCurveTo(g,x,y,f,d,p);break}}return{offsetX:i.ha*t,path:n}}class J extends F{constructor(t,e={}){const o=e.font;if(o===void 0)super();else{const c=o.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(c,e)}this.type="TextGeometry"}}new A;const M=document.querySelector("canvas.webgl"),m=new G,U=new H;m.add(U);const D=new L,K=D.load("/textures/matcaps/7.png"),Q=new B;Q.load("/fonts/helvetiker_regular.typeface.json",u=>{const t=new J("Hello Threejs",{font:u,size:.5,height:.2,curveSegments:5,bevelEnabled:!0,bevelThickness:.03,bevelSize:.02,bevelOffset:0,bevelSegments:4});t.computeBoundingBox(),t.center();const e=new R({matcap:K}),o=new v(t,e);m.add(o),console.time("donuts");const c=new j(.3,.2,20,45);for(let i=0;i<500;i++){const n=new v(c,e);n.position.x=(Math.random()-.5)*10,n.position.y=(Math.random()-.5)*10,n.position.z=(Math.random()-.5)*10,n.rotation.x=Math.random()*Math.PI,n.rotation.y=Math.random()*Math.PI;const s=Math.random();n.scale.set(s,s,s),m.add(n)}console.timeEnd("donuts")});const l={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{l.width=window.innerWidth,l.height=window.innerHeight,w.aspect=l.width/l.height,w.updateProjectionMatrix(),b.setSize(l.width,l.height),b.setPixelRatio(Math.min(window.devicePixelRatio,2))});const w=new q(75,l.width/l.height,.1,100);w.position.x=1;w.position.y=1;w.position.z=2;m.add(w);const T=new W(w,M);T.enableDamping=!0;const b=new C({canvas:M});b.setSize(l.width,l.height);b.setPixelRatio(Math.min(window.devicePixelRatio,2));const V=new O,S=()=>{V.getElapsedTime(),T.update(),b.render(m,w),window.requestAnimationFrame(S)};S();
