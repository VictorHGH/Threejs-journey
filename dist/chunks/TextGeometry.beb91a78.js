import{p as x,F as T,q as v,r as F}from"./three.module.5e3db628.js";class z extends x{constructor(n){super(n)}load(n,e,t,r){const i=this,h=new T(this.manager);h.setPath(this.path),h.setRequestHeader(this.requestHeader),h.setWithCredentials(i.withCredentials),h.load(n,function(c){let u;try{u=JSON.parse(c)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),u=JSON.parse(c.substring(65,c.length-2))}const l=i.parse(u);e&&e(l)},t,r)}parse(n){return new S(n)}}class S{constructor(n){this.isFont=!0,this.type="Font",this.data=n}generateShapes(n,e=100){const t=[],r=k(n,e,this.data);for(let i=0,h=r.length;i<h;i++)t.push(...r[i].toShapes());return t}}function k(p,n,e){const t=Array.from(p),r=n/e.resolution,i=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*r,h=[];let c=0,u=0;for(let l=0;l<t.length;l++){const a=t[l];if(a===`
`)c=0,u-=i;else{const d=E(a,r,c,u,e);c+=d.offsetX,h.push(d.path)}}return h}function E(p,n,e,t,r){const i=r.glyphs[p]||r.glyphs["?"];if(!i){console.error('THREE.Font: character "'+p+'" does not exists in font family '+r.familyName+".");return}const h=new v;let c,u,l,a,d,y,b,g;if(i.o){const s=i._cachedOutline||(i._cachedOutline=i.o.split(" "));for(let o=0,f=s.length;o<f;)switch(s[o++]){case"m":c=s[o++]*n+e,u=s[o++]*n+t,h.moveTo(c,u);break;case"l":c=s[o++]*n+e,u=s[o++]*n+t,h.lineTo(c,u);break;case"q":l=s[o++]*n+e,a=s[o++]*n+t,d=s[o++]*n+e,y=s[o++]*n+t,h.quadraticCurveTo(d,y,l,a);break;case"b":l=s[o++]*n+e,a=s[o++]*n+t,d=s[o++]*n+e,y=s[o++]*n+t,b=s[o++]*n+e,g=s[o++]*n+t,h.bezierCurveTo(d,y,b,g,l,a);break}}return{offsetX:i.ha*n,path:h}}class C extends F{constructor(n,e={}){const t=e.font;if(t===void 0)super();else{const r=t.generateShapes(n,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(r,e)}this.type="TextGeometry"}}export{z as F,C as T};
