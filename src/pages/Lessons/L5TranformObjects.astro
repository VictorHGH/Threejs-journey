---
import Layout from '../../layouts/Layout.astro';
import ClassTitle from '../../components/classtitle.astro';
---

<Layout title='Transform objects'>

  <ClassTitle title="Transform objects" />

  <script>
    import * as THREE from 'three';

    // Properties:
    // 1. position
    // 2. rotation
    // 3. scale
    // 4. quaternion

    // In three.js the axes are:
    // 1. x - right
    // 2. y - up
    // 3. z - forward

    // Scene
    const scene = new THREE.Scene();

    //Create a group
    const group = new THREE.Group();
    group.position.y = 1
    group.scale.y = 2
    group.rotation.y = 1
    scene.add(group)

    // Cubes
    const cube1 = new THREE.Mesh(
      new THREE.BoxGeometry(1, 1, 1),
      new THREE.MeshBasicMaterial({ color: 'red' })
    )

    group.add(cube1)

    const cube2 = new THREE.Mesh(
      new THREE.BoxGeometry(1, 1, 1),
      new THREE.MeshBasicMaterial({ color: 'blue' })
    )

    cube2.position.x = -2

    group.add(cube2)
    
    const cube3 = new THREE.Mesh(
      new THREE.BoxGeometry(1, 1, 1),
      new THREE.MeshBasicMaterial({ color: 'green' })
    )

    cube3.position.x = 2

    group.add(cube3)

    // Red Cube
    const geometry = new THREE.BoxGeometry(1, 1, 1);
    const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });
    const mesh = new THREE.Mesh(geometry, material);

    // Position
    /* mesh.position.x = 0.7 */
    /* mesh.position.y = -0.6 */
    /* mesh.position.z = 1 */
    mesh.position.set(0.7, -0.6, 1); // set all at once (x, y, z)

    // Scale
    /* mesh.scale.x = 2; */
    /* mesh.scale.y = 0.5; */
    /* mesh.scale.z = 0.5; */
    mesh.scale.set(2, 0.5, 0.5); // set all at once (x, y, z)

    // Rotation
    mesh.rotation.reorder('YXZ'); // change the order of rotation
    mesh.rotation.x = Math.PI * 0.25;
    mesh.rotation.y = Math.PI * 0.25;
    
    //Add mesh to scene
    scene.add(mesh);

    // Axes helper
    const axesHelper = new THREE.AxesHelper(2)
    scene.add(axesHelper);

    // Sizes
    const sizes = {
      width: 600,
      height: 400
    }

    // Camera
    const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height);
    camera.position.z = 3;

    // Look to an specific object or group in the scene
    /* camera.lookAt(mesh.position) */

    // Add camera to Scene
    scene.add(camera);

    // renderer and canvas
    const canvas = document.querySelector('.webgl')
    const renderer = new THREE.WebGLRenderer({
        canvas: canvas
    });
    renderer.setSize(sizes.width, sizes.height);

    // Render
    renderer.render(scene, camera);

  </script>

</Layout>

<style>
  h1 {
    text-align: center;
    margin: 5px 0;
    padding: 5px 0;
  }

  .webgl {
    display: block;
    margin: auto;
  }
</style>
